target computeStatement;

+[ COMPUTE A = B + C ] <> [ . ]

+[ COMPUTE A = B + C
     ON SIZE ERROR
        DISPLAY "OOPS" ]

+[ COMPUTE A = B + C
     SIZE ERROR
        DISPLAY "OOPS" ]

+[ COMPUTE A = B + C
     NOT ON SIZE ERROR
        DISPLAY "AOK" ]

+[ COMPUTE A = B + C
     NOT SIZE ERROR
        DISPLAY "AOK" ]

+[ COMPUTE A = B + C
     ON SIZE ERROR
        DISPLAY "OOPS"
     NOT ON SIZE ERROR
        DISPLAY "AOK" ]

+[ COMPUTE A = B + C
     ON SIZE ERROR
        DISPLAY "OOPS"
     NOT ON SIZE ERROR
        DISPLAY "AOK"
   END-COMPUTE ]

+[ COMPUTE A = B + C
   END-COMPUTE ]

+[ COMPUTE WS-NUM = FUNCTION ACOS ( IND ( 5 ) / 9 ) 
   END-COMPUTE ]

+[ COMPUTE WS-NUM = FUNCTION ANNUITY ( B / 2  8 )
   END-COMPUTE ]

+[ COMPUTE WS-INT = FUNCTION LENGTH ( "A" )
   END-COMPUTE ]

+[ COMPUTE WS-NUM = FUNCTION MAX ( A * B  ( C + 1 ) / 2  3 + 4 )
   END-COMPUTE ]

+[ COMPUTE WS-NUM = FUNCTION RANDOM END-COMPUTE ]

+[ COMPUTE WS-NUM = FUNCTION SUM ( 5 -2 -14 0 ) END-COMPUTE ]



# Issue #28; adding extra checks for places where functions, object refs and
# reference mods are not allowed
-[ COMPUTE FUNCTION FN ( X ) = A + B ]
-[ COMPUTE EXCEPTION-OBJECT = A + B ]
-[ COMPUTE NULL = A + B ]
-[ COMPUTE SELF = A + B ]
-[ COMPUTE SUPER = A + B ]
-[ COMPUTE MY-CLASS-NAME OF SUPER = A + B ]
-[ COMPUTE ADDRESS OF SOMETHING = A + B ]


# Samples from Suman Saurabh, checking support for LENGTH OF.
+[ COMPUTE A = B * LENGTH OF C ]
+[ COMPUTE XYZ OF TEST-RESP =
    PACKET-COUNT OF TEST-RESP *
    LENGTH OF RESPONSE-RECORD OF TEST-RESP
   END-COMPUTE ]
